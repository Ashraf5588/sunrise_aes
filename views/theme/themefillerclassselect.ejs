<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
  <meta name="theme-color" content="#3498db">
  <meta name="apple-mobile-web-app-capable" content="yes">
  <meta name="apple-mobile-web-app-status-bar-style" content="default">
  <title>Select Class for Theme Configuration</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
      color: #1a1a1a;
      min-height: 100vh;
      line-height: 1.6;
      padding: 2rem 1rem;
    }

    .container {
      max-width: 600px;
      margin: 0 auto;
    }

    .header-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      text-align: center;
      margin-bottom: 2rem;
    }

    .header-card h2 {
      color: #2c3e50;
      font-size: 2rem;
      font-weight: 700;
      margin-bottom: 0.5rem;
    }

    .header-card p {
      color: #7f8c8d;
      font-size: 1rem;
    }

    .selection-card {
      background: rgba(255, 255, 255, 0.95);
      backdrop-filter: blur(20px);
      -webkit-backdrop-filter: blur(20px);
      border-radius: 20px;
      padding: 2rem;
      box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
      border: 1px solid rgba(255, 255, 255, 0.2);
      margin-bottom: 2rem;
    }

    .selection-header {
      text-align: center;
      margin-bottom: 2rem;
    }

    .selection-header h3 {
      color: #2c3e50;
      font-size: 1.5rem;
      font-weight: 600;
      margin-bottom: 0.5rem;
    }

    .selection-header p {
      color: #7f8c8d;
      font-size: 0.9rem;
    }

    .class-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(120px, 1fr));
      gap: 1rem;
      margin-bottom: 2rem;
    }

    .class-card {
      background: rgba(255, 255, 255, 0.8);
      border-radius: 12px;
      padding: 1.5rem 1rem;
      text-align: center;
      border: 2px solid transparent;
      transition: all 0.3s ease;
      cursor: pointer;
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
    }

    .class-card:hover {
      transform: translateY(-3px);
      border-color: #3498db;
      box-shadow: 0 8px 15px rgba(52, 152, 219, 0.2);
    }

    .class-number {
      font-size: 2rem;
      font-weight: 700;
      color: #3498db;
      margin-bottom: 0.5rem;
    }

    .class-label {
      font-size: 0.9rem;
      color: #7f8c8d;
    }

    .btn {
      padding: 0.75rem 1.5rem;
      border: none;
      border-radius: 12px;
      font-size: 1rem;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
      text-decoration: none;
      display: inline-block;
      text-align: center;
    }

    .btn-primary {
      background: linear-gradient(135deg, #3498db, #2980b9);
      color: white;
      box-shadow: 0 4px 15px rgba(52, 152, 219, 0.3);
    }

    .btn-primary:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(52, 152, 219, 0.4);
    }

    .btn-back {
      background: linear-gradient(135deg, #95a5a6, #7f8c8d);
      color: white;
      box-shadow: 0 4px 15px rgba(127, 140, 141, 0.3);
    }

    .btn-back:hover {
      transform: translateY(-2px);
      box-shadow: 0 6px 20px rgba(127, 140, 141, 0.4);
    }

    .btn-secondary {
      background: #f8f9fa;
      color: #2c3e50;
      border: 1px solid #e9ecef;
      box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    }

    .btn-secondary:hover {
      background: #e9ecef;
      box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
    }

    .button-row {
      display: flex;
      justify-content: space-between;
      align-items: center;
      margin-top: 2rem;
    }

    .create-new-class {
      text-align: center;
      margin-top: 1rem;
      padding-top: 1rem;
      border-top: 1px solid #e9ecef;
    }
    
    /* Mobile Responsive */
    @media (max-width: 768px) {
      body {
        padding: 1rem 0.5rem;
      }
      
      .header-card {
        padding: 1.5rem;
      }
      
      .header-card h2 {
        font-size: 1.5rem;
      }
      
      .selection-card {
        padding: 1.5rem;
      }
      
      .class-grid {
        grid-template-columns: repeat(auto-fill, minmax(100px, 1fr));
        gap: 0.75rem;
      }
      
      .class-card {
        padding: 1rem 0.75rem;
      }
      
      .class-number {
        font-size: 1.5rem;
      }
      
      .button-row {
        flex-direction: column;
        gap: 1rem;
      }
      
      .btn {
        width: 100%;
      }
    }

    /* Animation */
    @keyframes fadeIn {
      from { opacity: 0; transform: translateY(20px); }
      to { opacity: 1; transform: translateY(0); }
    }

    .class-card {
      animation: fadeIn 0.3s ease-out forwards;
    }

    .class-card:nth-child(2) { animation-delay: 0.05s; }
    .class-card:nth-child(3) { animation-delay: 0.1s; }
    .class-card:nth-child(4) { animation-delay: 0.15s; }
    .class-card:nth-child(5) { animation-delay: 0.2s; }
    .class-card:nth-child(6) { animation-delay: 0.25s; }
    .class-card:nth-child(7) { animation-delay: 0.3s; }
    .class-card:nth-child(8) { animation-delay: 0.35s; }
    .class-card:nth-child(9) { animation-delay: 0.4s; }
    .class-card:nth-child(10) { animation-delay: 0.45s; }
    .class-card:nth-child(11) { animation-delay: 0.5s; }
    .class-card:nth-child(12) { animation-delay: 0.55s; }
  </style>
</head>
<body>
  <div class="container">
    <div class="header-card">
      <h2>Theme Configuration</h2>
      <p>Create themes, learning outcomes, and indicators for evaluation</p>
    </div>

    <div class="selection-card">
      <div class="selection-header">
        <h3>Select a Class</h3>
        <p>Choose the class for which you want to configure themes</p>
      </div>

      <div class="class-grid">
        <% if (studentClassdata && studentClassdata.length > 0) { %>
          <% 
            // Get unique class numbers
            let uniqueClasses = [];
            studentClassdata.forEach(classItem => {
              if (!uniqueClasses.includes(classItem.studentClass)) {
                uniqueClasses.push(classItem.studentClass);
              }
            });
            
            // Sort the classes numerically
            uniqueClasses.sort((a, b) => {
              return parseInt(a) - parseInt(b);
            });
          %>
          
          <% uniqueClasses.forEach(classNumber => { %>
            <div class="class-card" onclick="selectClass('<%= classNumber %>')">
              <div class="class-number"><%= classNumber %></div>
              <div class="class-label">Class</div>
            </div>
          <% }); %>
        <% } else { %>
          <div style="grid-column: 1/-1; text-align: center; padding: 2rem; color: #7f8c8d;">
            No classes found. Please add classes first.
          </div>
        <% } %>
      </div>

      <div class="create-new-class">
        <p style="margin-bottom: 1rem;">Don't see the class you need?</p>
        <div class="input-group" style="display: flex; margin-bottom: 1rem;">
          <input type="number" id="newClassInput" placeholder="Enter class number" style="flex: 1; padding: 0.75rem; border-radius: 12px 0 0 12px; border: 1px solid #e9ecef; font-size: 1rem;">
          <button onclick="createNewClass()" class="btn btn-primary" style="border-radius: 0 12px 12px 0;">Create</button>
        </div>
      </div>

      <div class="button-row">
        <a href="/theme" class="btn btn-back">Back to Themes</a>
      </div>
    </div>
  </div>

  <script>
    function selectClass(classNumber) {
      window.location.href = `/themefillupform?studentClass=${classNumber}`;
    }
    
    function createNewClass() {
      const classInput = document.getElementById('newClassInput');
      const classNumber = classInput.value.trim();
      
      if (!classNumber) {
        alert('Please enter a valid class number.');
        return;
      }
      
      // Redirect to the form with the new class number
      window.location.href = `/themefillupform?studentClass=${classNumber}`;
    }
  </script>
</body>
</html>
