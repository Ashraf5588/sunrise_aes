<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Practical Project Form</title>
  <style>
    * {
      margin: 0;
      padding: 0;
      box-sizing: border-box;
    }

    body {
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
      background: linear-gradient(135deg, #e8f4fd 0%, #c3dafe 100%);
      min-height: 100vh;
      padding: 20px;
    }

    .container {
      max-width: 1400px;
      margin: 0 auto;
      background: white;
      border-radius: 15px;
      box-shadow: 0 10px 30px rgba(0,0,0,0.1);
      overflow: hidden;
    }

    /* Table Container for Horizontal Scroll */
    .table-container {
      overflow-x: auto;
      margin: 15px 0;
      border: 2px solid #c3dafe;
      border-radius: 8px;
      background: white;
      max-width: 100%;
      -webkit-overflow-scrolling: touch;
    }

    .table-container::-webkit-scrollbar {
      height: 8px;
    }

    .table-container::-webkit-scrollbar-track {
      background: #f1f1f1;
      border-radius: 10px;
    }

    .table-container::-webkit-scrollbar-thumb {
      background: #c3dafe;
      border-radius: 10px;
    }

    .table-container::-webkit-scrollbar-thumb:hover {
      background: #667eea;
    }

    .header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 25px;
      text-align: center;
    }

    .header h1 {
      font-size: 28px;
      margin-bottom: 10px;
    }

    .header p {
      font-size: 16px;
      opacity: 0.9;
    }

    .form-container {
      padding: 30px;
    }

    .section {
      background: #fafcff;
      border: 2px solid #c3dafe;
      border-radius: 12px;
      margin: 20px 0;
      overflow: hidden;
    }

    .section-header {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 15px 20px;
      font-size: 18px;
      font-weight: 600;
    }

    .section-content {
      padding: 20px;
    }

    .form-row {
      display: grid;
      grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
      gap: 20px;
      margin-bottom: 20px;
    }

    .form-group {
      display: flex;
      flex-direction: column;
    }

    .form-group label {
      font-weight: 600;
      margin-bottom: 8px;
      color: #2d3748;
      font-size: 14px;
    }

    .form-control {
      padding: 12px 15px;
      border: 2px solid #c3dafe;
      border-radius: 8px;
      font-size: 16px;
      transition: all 0.3s ease;
      background: white;
    }

    .form-control:focus {
      outline: none;
      border-color: #667eea;
      box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-control:readonly {
      background: #f0f7ff;
      color: #4a5568;
    }

    /* Enhanced Table Styles */
    .evaluation-table, table {
      width: 100%;
      min-width: 800px; /* Minimum width to ensure readability */
      border-collapse: collapse;
      margin: 0;
      background: white;
      border-radius: 0;
      box-shadow: none;
      border: none;
    }

    .evaluation-table th, table th {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 12px 8px;
      text-align: center;
      font-weight: 600;
      font-size: 14px;
      border: 1px solid #5a67d8;
      white-space: nowrap;
      min-width: 120px;
    }

    .evaluation-table td, table td {
      padding: 10px 8px;
      border: 1px solid #c3dafe;
      vertical-align: middle;
      font-size: 13px;
      line-height: 1.4;
      word-wrap: break-word;
      max-width: 200px;
    }

    .evaluation-table tr:hover, table tr:hover {
      background-color: #f0f7ff;
    }

    .evaluation-table tr:nth-child(even), table tr:nth-child(even) {
      background-color: #fafcff;
    }

    .radio-group {
      display: flex;
      align-items: center;
      gap: 8px;
      margin: 4px 0;
      justify-content: center;
      flex-wrap: wrap;
    }

    .radio-group input[type="radio"] {
      margin-right: 4px;
      width: 16px;
      height: 16px;
      cursor: pointer;
      transform: scale(1.1);
    }

    .radio-group label {
      margin: 0;
      font-weight: 600;
      cursor: pointer;
      font-size: 14px;
      color: #2d3748;
      padding: 4px 8px;
      border-radius: 4px;
      transition: all 0.2s ease;
      background: #f0f7ff;
      border: 1px solid #c3dafe;
      min-width: 30px;
      text-align: center;
    }

    .radio-group label:hover {
      background: #e1f0ff;
      border-color: #a3c3ff;
    }

    .radio-group input[type="radio"]:checked + label {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      border-color: #5a67d8;
    }

    .unit-section {
      background: white;
      border: 1px solid #c3dafe;
      border-radius: 10px;
      margin: 20px 0;
      overflow: hidden;
    }

    .unit-header {
      background: #28a745;
      color: white;
      padding: 12px 15px;
      font-weight: 600;
      font-size: 18px;
    }

    .unit-content {
      padding: 20px;
    }

    .practical-section {
      background: #fafcff;
      border: 1px solid #c3dafe;
      border-radius: 8px;
      margin: 15px 0;
      overflow: hidden;
    }

    .practical-header {
      background: #007bff;
      color: white;
      padding: 10px 15px;
      font-weight: 600;
    }

    .practical-content {
      padding: 15px;
    }

    .project-section {
      background: #fafcff;
      border: 1px solid #c3dafe;
      border-radius: 8px;
      margin: 15px 0;
      overflow: hidden;
    }

    .project-header {
      background: #28a745;
      color: white;
      padding: 10px 15px;
      font-weight: 600;
    }

    .project-content {
      padding: 15px;
    }

    .total-display {
      background: #e3f2fd;
      border: 2px solid #2196f3;
      border-radius: 8px;
      padding: 15px;
      margin: 20px 0;
      text-align: center;
    }

    .total-display label {
      font-weight: 600;
      font-size: 16px;
      color: #1976d2;
    }

    .submit-btn {
      background: linear-gradient(135deg, #28a745 0%, #20c997 100%);
      color: white;
      border: none;
      padding: 15px 30px;
      font-size: 18px;
      font-weight: 600;
      border-radius: 10px;
      cursor: pointer;
      transition: all 0.3s ease;
      width: 100%;
      margin-top: 30px;
    }

    .submit-btn:hover {
      transform: translateY(-2px);
      box-shadow: 0 5px 15px rgba(40, 167, 69, 0.3);
    }

    @media (max-width: 768px) {
      .form-row {
        grid-template-columns: 1fr;
      }
      
      .container {
        margin: 10px;
        border-radius: 10px;
      }
      
      .header h1 {
        font-size: 24px;
      }
      
      .form-container {
        padding: 20px;
      }

      /* Mobile Optimization - Flatten nested structure */
      .unit-section {
        background: transparent;
        border: none;
        border-radius: 0;
        margin: 15px 0;
        overflow: visible;
        padding: 0;
      }

      .unit-header {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 8px 12px;
        font-weight: 600;
        font-size: 16px;
        border-radius: 8px;
        margin-bottom: 10px;
        text-align: center;
      }

      .unit-content {
        padding: 0;
      }

      .practical-section {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin: 10px 0;
        overflow: hidden;
      }

      .practical-header {
        background: linear-gradient(135deg, #007bff, #0056b3);
        color: white;
        padding: 8px 12px;
        font-weight: 600;
        font-size: 14px;
        text-align: center;
      }

      .practical-content {
        padding: 10px;
      }

      .project-section {
        background: #f8f9fa;
        border: 1px solid #dee2e6;
        border-radius: 8px;
        margin: 10px 0;
        overflow: hidden;
      }

      .project-header {
        background: linear-gradient(135deg, #28a745, #20c997);
        color: white;
        padding: 8px 12px;
        font-weight: 600;
        font-size: 14px;
        text-align: center;
      }

      .project-content {
        padding: 10px;
      }

      /* Compact section headers */
      .section-header {
        padding: 10px 15px;
        font-size: 16px;
      }

      .section-content {
        padding: 15px;
      }

      /* Make form elements more mobile-friendly */
      .form-control {
        padding: 10px 12px;
        font-size: 16px; /* Prevents zoom on iOS */
      }

      /* Reduce total display padding */
      .total-display {
        padding: 10px;
        margin: 15px 0;
      }

      .total-display label {
        font-size: 14px;
      }
    }

    /* Extra small screens - Ultra compact layout */
    @media (max-width: 480px) {
      body {
        padding: 10px 5px;
      }

      .form-container {
        padding: 10px;
      }

      /* Ultra flat structure for very small screens */
      .unit-section {
        margin: 10px 0;
        padding: 0;
        background: transparent;
        border: none;
      }

      .unit-header {
        padding: 6px 10px;
        font-size: 14px;
        margin-bottom: 8px;
        border-radius: 6px;
      }

      .practical-section, .project-section {
        margin: 8px 0;
        border-radius: 6px;
      }

      .practical-header, .project-header {
        padding: 6px 10px;
        font-size: 13px;
      }

      .practical-content, .project-content {
        padding: 8px;
      }

      /* Compact section styling */
      .section {
        margin: 10px 0;
        border-radius: 8px;
      }

      .section-header {
        padding: 8px 12px;
        font-size: 14px;
      }

      .section-content {
        padding: 10px;
      }

      /* More compact form elements */
      .form-control {
        padding: 8px 10px;
      }

      .radio-group {
        gap: 4px;
      }

      .radio-group label {
        padding: 2px 6px;
        font-size: 12px;
        min-width: 25px;
      }

      /* Compact table styling */
      .evaluation-table th,
      .table-container table th {
        padding: 8px 4px;
        font-size: 12px;
        min-width: 80px;
      }

      .evaluation-table td,
      .table-container table td {
        padding: 6px 4px;
        font-size: 11px;
        max-width: 150px;
      }

      /* Ultra compact total display */
      .total-display {
        padding: 8px;
        margin: 10px 0;
      }

      .total-display label {
        font-size: 12px;
      }

      /* Header optimization */
      .header h1 {
        font-size: 20px;
      }

      .header p {
        font-size: 14px;
      }
    }
  </style>
</head>
<body>
  <div class="container">
    <div class="header">
      <h1>Practical Project Evaluation Form</h1>
      <p>Student Assessment and Evaluation System</p>
    </div>
    
    <div class="form-container">
      <form action="/practicalprojectform?studentClass=<%= studentClass %>&section=<%= section %>&subject=<%= subject %>&terminal=<%= terminal %>" method="POST">
        
        <!-- Student Information Section -->
        <div class="section">
              
          <div class="section-header">Student Information</div>

          <div class="studentname">
            <% studentData.forEach((studentname) => { %>
              <input type="button" name="" id="studentData<%= studentname.roll %>" value="<%=studentname.roll%>- <%= studentname.name %>" style="background-color:#2196f3; color:white; border-radius: 7px; margin:1%; padding:5px; border:none; font-weight: bold; font-size: 16px;" onclick="fill('<%= studentname.roll %>','<%= studentname.name %>','<%= studentname.reg %>')">
            <% }); %>
          </div><input type="hidden" name="reg" >
          <div class="section-content">
            <div class="form-row">

              
              <div class="form-group">
                <label for="roll">Roll Number</label>
                <input type="text" name="roll" id="roll" class="form-control" placeholder="Enter Roll Number">
              </div>
              <div class="form-group">
                <label for="name">Student Name</label>
                <input type="text" name="name" id="name" class="form-control" placeholder="Enter Student Name">
              </div>
              <div class="form-group">
                <label for="studentClass">Class</label>
                <input type="text" name="studentClass" id="studentClass" value="<%= studentClass %>" class="form-control" readonly>
              </div>
              <div class="form-group">
                <label for="section">Section</label>
                <input type="text" name="section" id="section" value="<%= section %>" class="form-control" readonly>
              </div>
              <div class="form-group">
                <label for="subject">Subject</label>
                <input type="text" name="subject" id="subject" value="<%= subject %>" class="form-control" readonly>
              </div>
              <div class="form-group">
                <label for="terminal">Terminal</label>
                <input type="text" id="terminal" name="terminalName" class="form-control" readonly>
              </div>
            </div>
          </div>
        </div>

        <!-- Attendance Section -->
        <div class="section">
          <div class="section-header">Attendance Evaluation</div>
          <div class="section-content">
            <div class="form-row">
              <div class="form-group">
                <label for="attendanceDays">Total Attendance Days</label>
                <input type="number" name="totalAttendance" id="attendanceDays" class="form-control" placeholder="Enter Total Attendance Days" oninput="calculateAttendanceMarks()">
              </div>
              <div class="form-group">
                <label for="attendanceMarks">Attendance Marks</label>
                <input type="number" name="attendanceMarks" id="attendanceMarks" class="form-control" readonly step="0.1">
              </div>
            </div>
          </div>
        </div>

        <!-- Participation Section -->
        <div class="section">
          <div class="section-header">Participation Evaluation</div>
          <div class="section-content">
            <div class="table-container">
              <table>
                <thead>
                  <tr>
                    <th>आधार</th>
                    <th>सूचक</th>
                    <th>स्तर</th>
                    <th>अंक</th>
                  </tr>
                </thead>
                <tbody>
                  <tr>
                    <td rowspan="4">सक्रियता र सहभागिता</td>
                    <td>सिकाइमा जिज्ञासा राख्दै, समूह छलफल र अन्तरक्रियामा सक्रियतापूर्वक भाग लिएको, आफ्ना विचार निर्वाध र स्वतन्त्र रूपमा प्रस्तुत गरेको, दिइएका सम्पूर्ण कार्य स्वयंमले पूरा गरेको</td>
                    <td>सर्वोत्कृष्ट</td>
                    <td><div class="radio-group"><input type="radio" name="participationMarks" value="2" id="part2"> <label for="part2">२</label></div></td>
                  </tr>
                  <tr>
                    <td>सिकाइमा जिज्ञासा राख्दै, समूह छलफल र अन्तरक्रियामा कम सक्रियतापूर्वक भाग लिएको, आफ्ना विचार स्वतन्त्र रूपमा प्रस्तुत गरेको, दिइएका अधिकांश कार्य पूरा गरेको</td>
                    <td>उत्कृष्ट</td>
                    <td><div class="radio-group"><input type="radio" name="participationMarks" value="1.5" id="part1_5"> <label for="part1_5">१.५</label></div></td>
                  </tr>
                  <tr>
                    <td>सिकाइमा कम जिज्ञासा राख्दै, समूह छलफल र अन्तरक्रियामा निर्देशानुसार भाग लिएको, आफ्ना विचार आंशिक रूपमा मात्र प्रस्तुत गरेको, दिइएका कार्य आधा मात्र पूरा गरेको</td>
                    <td>मध्यम</td>
                    <td><div class="radio-group"><input type="radio" name="participationMarks" value="1" id="part1"> <label for="part1">१</label></div></td>
                  </tr>
                  <tr>
                    <td>सिकाइप्रति उदासीन रहेमा, समूह छलफल र अन्तरक्रियामा सक्रियता नदेखाएको, आफ्ना विचार प्रस्तुत गर्न साथी वा शिक्षकको सहयोग चाहिएको, अरुको सहयोगमा दिइएको कार्य पूरा गरेको</td>
                    <td>सामान्य</td>
                    <td><div class="radio-group"><input type="radio" name="participationMarks" value="0.5" id="part0_5"> <label for="part0_5">०.५</label></div></td>
                  </tr>
                </tbody>
              </table>
            </div>
          </div>
        </div>

        <!-- Terminal Marks Section -->
        <div class="section">
          <div class="section-header">Terminal Marks Evaluation</div>
          <div class="section-content">
            <div class="form-row">
              <div class="form-group">
                <label for="theoryMarks">Terminal Marks</label>
                <input type="number" name="theoryMarks" id="theoryMarks" class="form-control" placeholder="Enter Terminal Marks" step="0.1" oninput="calculateTerminalMarks()">
              </div>
              <div class="form-group">
                <label for="obtainedconvertedmarks">Converted Terminal Marks</label>
                <input type="number" name="terminalMarks" id="obtainedconvertedmarks" class="form-control" readonly step="0.1">
              </div>
            </div>
          </div>
        </div>
        <!-- Practical/Project Work Section -->
        <div class="section">
          <div class="section-header">Practical/Project Work Evaluation</div>
          <div class="section-content">
            
            <% ScienceData.forEach((item,itemIdx) => { %>
              <% item.units.forEach((unit,idx)=>{ %>
                <div class="unit-section">
                  <div class="unit-header">
                    Unit: <%= unit.unitName %>
                    <input type="hidden" name="unit[<%= idx %>][unitName]" value="<%= unit.unitName %>">
                  </div>
                  <div class="unit-content">
                    
                    <% unit.practicals.forEach((practical,prindx)=>{ %>
                      <div class="practical-section">
                        <div class="practical-header">
                          Practical <%= prindx + 1 %>: <%= practical %>
                          <input type="hidden" name="unit[<%= idx %>][practicals][<%= prindx %>][practicalName]" value="<%= practical %>">
                        </div>
                        <div class="practical-content">
                          <div class="table-container">
                            <table class="evaluation-table">
                              <thead>
                                <tr>
                                  <th>S.No</th>
                                  <th>मुल्याङ्कनका आधार</th>
                                  <th>परिक्षण पक्ष</th>
                                  <th>सूचक</th>
                                  <th>अंक</th>
                                  <th>Remarks</th>
                                </tr>
                              </thead>
                              <tbody>
                                <% let iIndex = 0 %>
                                <% practicalFormatData.forEach(function(doc) { %>
                                  <% doc.themes.forEach(function(theme) { %>
                                    <% let themeRowspan = theme.learningOutcome.reduce((sum, lo) => sum + lo.indicators.length, 0); %>
                                    <% let firstThemeRow = true; %>

                                    <% theme.learningOutcome.forEach(function(lo,loIdx) { %>
                                      <% let loRowspan = lo.indicators.length; %>
                                      <% let mulyIndex = iIndex; %>

                                      <% lo.indicators.forEach(function(ind, indIndex) { %>
                                        <tr>
                                          <% if(firstThemeRow && indIndex === 0) { %>
                                            <td rowspan="<%= themeRowspan %>"><%= iIndex+1 %></td>
                                            <td rowspan="<%= themeRowspan %>"><%= theme.themeName %></td>
                                            <% firstThemeRow = false; %>
                                          <% } %>

                                          <% if(indIndex === 0) { %>
                                            <td rowspan="<%= loRowspan %>"><%= lo.learningOutcomeName %></td>
                                          <% } %>

                                          <td><%= ind.indicatorName %></td>
                                          <td>
                                            <div class="radio-group">
                                              <input type="radio" 
                                                     value="<%= ind.indicatorsMarks %>||<%= ind.indicatorName %>||<%= lo.learningOutcomeName %>" 
                                                     class="marks-radio"
                                                     name="unit[<%= idx %>][practicals][<%= prindx %>][criteria][<%= iIndex %>]"
                                                     data-practical="<%= idx %>-<%= prindx %>"
                                                     id="practical_<%= idx %>_<%= prindx %>_<%= iIndex %>_<%= indIndex %>">
                                              <label for="practical_<%= idx %>_<%= prindx %>_<%= iIndex %>_<%= indIndex %>"><%= ind.indicatorsMarks %></label>
                                            </div>
                                          </td>
                                          <td></td>
                                        </tr>
                                      <% }) %>
                                      <% iIndex++ %>
                                    <% }) %>
                                  <% }) %>
                                <% }) %>
                              </tbody>
                            </table>
                          </div>
                          <div class="total-display">
                            <label>Total Practical Marks</label>
                            <input type="number" name="unit[<%= idx %>][practicals][<%= prindx %>][practicalMarks]" 
                                   value="0" id="practical-total-<%= idx %>-<%= prindx %>" 
                                   class="form-control" readonly>
                          </div>
                        </div>
                      </div>
                    <% }) %>
                  </div>
                </div>
              <% }) %>
            <% }) %>
            
            <!-- Project Work Section -->
            <% ScienceData.forEach((item) => { %>
              <% item.units.forEach((unit,idx)=>{ %>
                <% unit.projectworks.forEach((project,prindx)=>{ %>
                  <div class="unit-section">
                    <div class="unit-header">
                      Project Work - <%= unit.unitName%>
                    </div>
                    <div class="unit-content">
                      <div class="project-section">
                        <div class="project-header">
                          Project <%= prindx + 1 %>: <%= project %>
                          <input type="hidden" name="unit[<%= idx %>][projectWorks][<%= prindx %>][projectName]" value="<%= project %>">
                        </div>
                        <div class="project-content">
                          <div class="table-container">
                            <table>
                              <thead>
                                <tr>
                                  <th>SN</th>
                                  <th>आधार</th>
                                  <th>पक्ष</th>
                                  <th>सूचक</th>
                                 
                                  <th>प्राप्तांक</th>
                                </tr>
                              </thead>
                              <tbody>
                                <% let iIndex = 0 %>
                                <% projectFormatData.forEach(function(doc) { %>
                                  <% doc.themes.forEach(function(theme) { %>
                                    <% let themeRowspan = theme.learningOutcome.reduce((sum, lo) => sum + lo.indicators.length, 0); %>
                                    <% let firstThemeRow = true; %>

                                    <% theme.learningOutcome.forEach(function(lo,loIdx) { %>
                                      <% let loRowspan = lo.indicators.length; %>
                                      <% let mulyIndex = iIndex; %>

                                      <% lo.indicators.forEach(function(ind, indIndex) { %>
                                        <tr>
                                          <% if(firstThemeRow && indIndex === 0) { %>
                                            <td rowspan="<%= themeRowspan %>"><%= iIndex+1 %></td>
                                            <td rowspan="<%= themeRowspan %>"><%= theme.themeName %></td>
                                            <% firstThemeRow = false; %>
                                          <% } %>

                                          <% if(indIndex === 0) { %>
                                            <td rowspan="<%= loRowspan %>"><%= lo.learningOutcomeName %></td>
                                          <% } %>

                                          <td><%= ind.indicatorName %></td>
                                          <td>
                                            <div class="radio-group">
                                              
     

                                              <input type="radio" 
                                                     value="<%= ind.indicatorsMarks %>||<%= ind.indicatorName %>||<%= lo.learningOutcomeName %> " 
                                                     class="marks-radio-project"
                                                     name="unit[<%= idx %>][projectWorks][<%= prindx %>][criteria][<%= iIndex %>]"
                                                     data-project="<%= idx %>-<%= prindx %>"
                                                     id="project_<%= idx %>_<%= prindx %>_<%= iIndex %>_<%= indIndex %>">
                                              <label for="project_<%= idx %>_<%= prindx %>_<%= iIndex %>_<%= indIndex %>"><%= ind.indicatorsMarks %></label>
                                            </div>
                                          </td>
                                          <td></td>
                                        </tr>
                                      <% }) %>
                                      <% iIndex++ %>
                                    <% }) %>
                                  <% }) %>
                                <% }) %>
                              </tbody>
                            </table>
                              <div class="total-display">
                            <label>Total Project Marks</label>
                            <input type="number" name="unit[<%= idx %>][projectWorks][<%= prindx %>][projectMarks]" 
                                   value="0" id="project-total-<%= idx %>-<%= prindx %>" 
                                   class="form-control" readonly>
                          </div>
                          </div>
                         
                        </div>
                      </div>
                    </div>
                  </div>
                <% }) %>
              <% }) %>
            <% }) %>
          </div>
        </div>

        <button type="submit" class="submit-btn">Submit Evaluation Form</button>
      </form>
    </div>
  </div>
 



  </form>

  <input type="number" value="<%=workingDays%>" id="totalWorkingDays" style="display:none;">






  <script>

    //populating terminal
    const terminal = window.location.search;
    
    const terminalParams = new URLSearchParams(terminal);
    
    const terminalValue = terminalParams.get('terminal');
    document.querySelector('#terminal').value = terminalValue;
function calculateTerminalMarks() {
      const terminal = window.location.search;
    
    const terminalParams = new URLSearchParams(terminal);
    
    const terminalValue = terminalParams.get('terminal');
  
    if(terminalValue != "FINAL")
  {
    const theoryMarks = parseFloat(document.getElementById('theoryMarks').value);
    document.getElementById('obtainedconvertedmarks').value = (theoryMarks/50)*10;
  }
}

    function calculateAttendanceMarks() {
     const attendanceDays = parseInt(document.getElementById('attendanceDays').value, 10) || 0;
      const totalWorkingDays = document.getElementById('totalWorkingDays').value || 0;
    
      const attendancePercentage = (attendanceDays / totalWorkingDays) * 100;
      console.log(attendancePercentage);

      if(attendancePercentage >=90 && attendancePercentage <=100) {
        
        document.getElementById('attendanceMarks').value = 2;
      }
      else if(attendancePercentage >= 85 && attendancePercentage < 90) {
      
        document.getElementById('attendanceMarks').value = 1.5;
      }
      else if(attendancePercentage >= 80 && attendancePercentage < 85) {
       
        document.getElementById('attendanceMarks').value = 1;
      }
      else if(attendancePercentage >=75 && attendancePercentage < 80) {
     
        document.getElementById('attendanceMarks').value = 0.5;
      }
      else {
        document.getElementById('attendanceMarks').value = 0;
      }
    }
  </script>
<!-- script to calcualted total obtained per radio per practical -->
 <script>
document.querySelectorAll(".marks-radio").forEach(radio => {
  radio.addEventListener("change", e => {
    let group = e.target.dataset.practical;   // e.g. "0-1"
    let totalInput = document.getElementById("practical-total-" + group);

    // सबै radio जसमा data-practical = यो group छ, र checked
    let checked = document.querySelectorAll(`input[data-practical="${group}"]:checked`);
    let total = Array.from(checked).reduce((sum, r) => sum + parseInt(r.value), 0);

    totalInput.value = total;
  });
});
  </script>
   <script>
document.querySelectorAll(".marks-radio-project").forEach(radio => {
  radio.addEventListener("change", e => {
    let group = e.target.dataset.project;   // e.g. "0-1"
    let totalInput = document.getElementById("project-total-" + group);

    // सबै radio जसमा data-practical = यो group छ, र checked
    let checked = document.querySelectorAll(`input[data-project="${group}"]:checked`);
    let total = Array.from(checked).reduce((sum, r) => sum + parseInt(r.value), 0);

    totalInput.value = total;
  });
});
  </script>

 
  

<script>
  async function fill(roll,name,reg) {
    document.getElementById('roll').value = roll;
    document.getElementById('name').value = name;
    document.querySelector('input[name="reg"]').value = reg;

    if(roll && name && reg) {
      // Fetch existing data from server
      fillAttendance()
      const response = await fetch(`/getPracticalData?roll=${roll}&reg=${reg}&studentClass=<%= studentClass %>&section=<%= section %>&subject=<%= subject %>&terminal=<%= terminal %>`);
      const practicalData = await response.json();
      console.log("Fetched data:", practicalData);
if(practicalData===null)
{
  clearForm();
  return;
}
        if(practicalData.participationMarks) {
          document.querySelector(`input[name="participationMarks"][value="${practicalData.participationMarks}"]`).checked = true;

        } else {
          document.querySelectorAll(`input[name="participationMarks"]`).forEach(radio => radio.checked = false);
        }

      if(practicalData.totalAttendance) {
          document.getElementById('attendanceDays').value = practicalData.totalAttendance || 0;
          calculateAttendanceMarks();

        } else {
          document.getElementById('attendanceDays').value = '';
          document.getElementById('attendanceMarks').value = '';
        }
        if(practicalData.theoryMarks) {
          document.getElementById('theoryMarks').value = practicalData.theoryMarks;
          calculateTerminalMarks();
        } else {
          document.getElementById('theoryMarks').value = '';
          document.getElementById('obtainedconvertedmarks').value = '';
        }
        // Populate practical marks
        if(practicalData.unit && Array.isArray(practicalData.unit)) {
          practicalData.unit.forEach((unit, unitIdx) => {
            // Populate practical marks
            if(unit.practicals && Array.isArray(unit.practicals)) {
              unit.practicals.forEach((practical, practicalIdx) => {
              // ...existing code...
if (practical.criteria && Array.isArray(practical.criteria)) {
  // Get all radios for this practical
  let allRadios = document.querySelectorAll(`input[data-practical="${unitIdx}-${practicalIdx}"]`);
  
  // Group radios by their name attribute
  let radioGroups = {};
  allRadios.forEach(radio => {
    if (!radioGroups[radio.name]) {
      radioGroups[radio.name] = [];
    }
    radioGroups[radio.name].push(radio);
  });
  
  // Match criteria with radio groups (assuming they are in the same order)
  let groupNames = Object.keys(radioGroups);
  practical.criteria.forEach((c, criteriaIdx) => {
    if (criteriaIdx < groupNames.length) {
      let mark = c.practicalIndicatorMarks.toString().trim();
      let radiosInGroup = radioGroups[groupNames[criteriaIdx]];
      
      // Find and check the matching radio in this group
      let matchingRadio = radiosInGroup.find(radio => 
        radio.value.split('||')[0].trim() === mark
      );
      
      if (matchingRadio) {
        matchingRadio.checked = true;
      }
    }
  });
}
// ...existing code...


                // Update total for this practical
                let totalInput = document.getElementById(`practical-total-${unitIdx}-${practicalIdx}`);
                let checked = document.querySelectorAll(`input[data-practical="${unitIdx}-${practicalIdx}"]:checked`);
                let total = Array.from(checked).reduce((sum, r) => sum + parseInt(r.value), 0);
                totalInput.value = total;
              });
            }

            // Populate project marks
            // Populate project marks
// ...existing code...
if(unit.projectWorks && Array.isArray(unit.projectWorks)) {
  unit.projectWorks.forEach((project, projectIdx) => {
    if (project.criteria && Array.isArray(project.criteria)) {
      // Get all radios for this project
      let allRadios = document.querySelectorAll(`input[data-project="${unitIdx}-${projectIdx}"]`);
      
      // Group radios by their name attribute
      let radioGroups = {};
      allRadios.forEach(radio => {
        if (!radioGroups[radio.name]) {
          radioGroups[radio.name] = [];
        }
        radioGroups[radio.name].push(radio);
      });
      
      // Match criteria with radio groups (in order)
      let groupNames = Object.keys(radioGroups);
      project.criteria.forEach((c, criteriaIdx) => {
        if (criteriaIdx < groupNames.length) {
          let mark = c.projectIndicatorMarks.toString().trim();
          let radiosInGroup = radioGroups[groupNames[criteriaIdx]];
          
          // Find and check the matching radio in this specific group
          let matchingRadio = radiosInGroup.find(radio => 
            radio.value.split('||')[0].trim() === mark
          );
          
          if (matchingRadio) {
            matchingRadio.checked = true;
          }
        }
      });
    }

    // Update total
    let totalInput = document.getElementById(`project-total-${unitIdx}-${projectIdx}`);
    let checked = document.querySelectorAll(`input[data-project="${unitIdx}-${projectIdx}"]:checked`);
    let total = Array.from(checked).reduce((sum, r) => sum + parseInt(r.value), 0);
    totalInput.value = total;
  });
}
// ...existing code...
          });
        }
      } else {
        // Clear form if no data
        document.getElementById('attendanceDays').value = '';
        document.getElementById('attendanceMarks').value = '';
        document.getElementById('theoryMarks').value = '';
        document.getElementById('obtainedconvertedmarks').value = '';

        // Clear practical marks
        ScienceData.forEach((item) => {
  item.units.forEach((unit,unitIdx)=> {
    // Clear practicals
    unit.practicals.forEach((practical,practicalIdx)=> {
      document.getElementById(`practical-total-${unitIdx}-${practicalIdx}`).value = '0';
      document.querySelectorAll(`input[data-practical="${unitIdx}-${practicalIdx}"]`).forEach(radio => {
        radio.checked = false;
      });
    });

    // Clear projects
    unit.projectWorks.forEach((project, projectIdx) => {
      document.getElementById(`project-total-${unitIdx}-${projectIdx}`).value = '0';
      document.querySelectorAll(`input[data-project="${unitIdx}-${projectIdx}"]`).forEach(radio => {
        radio.checked = false;
      });
    });
  });
});

      }
    }
  
</script>

<input type="text" id="attendanceData" value='<%= JSON.stringify(attendanceData) %>' style="display:none;">
<input type="text" id="marksheetSetting" value="<%=JSON.stringify(marksheetSetting)%>" style="display:none;">
<script>

  function fillAttendance()
  {
  const roll = document.getElementById('roll').value;
  const name = document.getElementById('name').value;
  const attendanceData = JSON.parse(document.getElementById('attendanceData').value);
  const marksheetSetting = JSON.parse(document.getElementById('marksheetSetting').value);
  const terminalname = document.getElementById('terminal').value;
  console.log("Attendance Data on load:", attendanceData);
  if(roll && name) {
    attendanceData.forEach(record => {
      if(record.roll === roll.toString()) {
        if(terminalname===marksheetSetting[0].terminals[0].name)
      {
        document.getElementById('attendanceDays').value = record.firstTerm || 0;
        calculateAttendanceMarks();
      }
      else if (terminalname===marksheetSetting[0].terminals[1].name) {
        document.getElementById('attendanceDays').value = record.secondTerm || 0;
        calculateAttendanceMarks();
      }
        else if (terminalname===marksheetSetting[0].terminals[2].name) {
        document.getElementById('attendanceDays').value = record.thirdTerm || 0;
        calculateAttendanceMarks();
        }
        else if (terminalname===marksheetSetting[0].terminals[3].name) {
        document.getElementById('attendanceDays').value = record.finalTerm || 0;
        calculateAttendanceMarks();
        }
      }
    });

  }
  }
  
</script>
<script>
  const ScienceData = <%- JSON.stringify(ScienceData) %>;

function clearForm() {
  // Clear text/number inputs
 
  document.getElementById('theoryMarks').value = '';
  document.getElementById('obtainedconvertedmarks').value = '';

  // ✅ Uncheck all radios properly
  document.querySelectorAll('input[type="radio"]').forEach(radio => {
    radio.checked = false;
  });

  // (Optional) Reset practical/project totals if you have them
  document.querySelectorAll('[id^="practical-total-"]').forEach(el => el.value = '0');
  document.querySelectorAll('[id^="project-total-"]').forEach(el => el.value = '0');

  console.log("Form cleared.");
}

</script>


</body>
</html>
